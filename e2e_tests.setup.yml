name: ODE Setup
description: Create and await a new on-demand environment
inputs:
  branch-key:
    required: true

env:
  PR_NUMBER: ${{ github.event.number }}

  # the version of the code that should be deployed and tested, which is the head of the source branch
  PR_REF: ${{ github.head_ref }}

  BRANCH_KEY: ${{ inputs.branch-key }}

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
        sparse-checkout: .github
        submodules: 'true'
        
    - name: Trigger On-Demand Env Creation
      run: |
        chmod u+x "${GITHUB_WORKSPACE}/.github/workflows/on-demand-testing-workflows/e2e_tests/createEnv.sh"
        "${GITHUB_WORKSPACE}/.github/workflows/on-demand-testing-workflows/e2e_tests/createEnv.sh"

        # sleep for a few seconds for GitHub to respond to the new job being requested.  Confirmed that there is a delay from when the API responds claiming success from
        # the POST above, and when it will actually return the new job from the "actions/runs" endpoint below.
        sleep 10

            
    - name: Poll for On-Demand Env Ready
      timeout-minutes: 30
      run: |
        # the following line is temporary until we work through some flakiness.  When the below script fails to collect a list of PRs that includes the new one, we want
        # to know if that is because it was in an unexpected state, or if GitHub simply hadn't responded to the run being added yet.  So for now, before running the script
        # which will collect the list of runs, get the entire list and dump it to a file.
        curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_TOKEN_ACCESS_PLAYWRIGHT }}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/CardFlight/test-instance/actions/runs?event=repository_dispatch" > debug.txt

        chmod u+x "${GITHUB_WORKSPACE}/.github/workflows/on-demand-testing-workflows/e2e_tests/waitForEnvReady.sh"
        "${GITHUB_WORKSPACE}/.github/workflows/on-demand-testing-workflows/e2e_tests/waitForEnvReady.sh"

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: debug output
        path: |
          debug.txt
        retention-days: 7
